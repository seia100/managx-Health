version: '3.8'

services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: health_backend
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_NAME=health_db
            - DB_USER=health_user
            - DB_PASSWORD=health_password
            - JWT_SECRET=your_jwt_secret_key_here
        volumes:
            - ./backend:/usr/src/app
            - /usr/src/app/node_modules
        depends_on:
            - postgres
        networks:
            - health_network
        command: npm run dev
        restart: unless-stopped

    postgres:
        image: postgres:15-alpine
        container_name: health_postgres
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_DB=health_db
            - POSTGRES_USER=health_user
            - POSTGRES_PASSWORD=health_password
            - POSTGRES_HOST_AUTH_METHOD=trust
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - health_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U health_user -d health_db"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped

volumes:
    postgres_data:
        name: health_postgres_data

networks:
    health_network:
        name: health_network
        driver: bridge