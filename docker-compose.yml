# Especifica la versión de la sintaxis de Docker Compose para garantizar compatibilidad.
version: "3.9" 

# Define los servicios que serán gestionados por Docker Compose.
services:
    # Configuración del servicio de base de datos PostgreSQL.
    db:
        # Selección de la imagen base del contenedor para PostgreSQL.
        image: postgres:13
        # Asigna un nombre legible al contenedor para facilitar su identificación.
        container_name: healthcare-db
        # Define variables de entorno necesarias para inicializar PostgreSQL.
        # POSTGRES_USER: Usuario administrador para la base de datos.
        # POSTGRES_PASSWORD: Contraseña del usuario administrador.
        # POSTGRES_DB: Nombre de la base de datos inicial que se crea al arrancar el contenedor.
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}

        # Mapea el puerto interno del contenedor PostgreSQL (5432) al puerto del host (5432).
        # Esto permite que servicios externos se conecten a la base de datos.
        ports:
            - "5432:5432"
        # Define volúmenes para persistencia de datos y configuración inicial.
        volumes:
            # db-data: Persistencia de los datos en el directorio de almacenamiento predeterminado de PostgreSQL.
            - db-data:/var/lib/postgresql/data
            # ./database/config: Permite cargar scripts o configuraciones personalizadas en la inicialización.
            - ./database/config:/docker-entrypoint-initdb.d
        # Configura el comportamiento de reinicio del contenedor.
        # "unless-stopped": Reinicia el contenedor automáticamente excepto si es detenido manualmente.
        restart: unless-stopped

# Declaración de volúmenes persistentes.
volumes:
    # db-data: Define un volumen con nombre que asegura la persistencia de los datos de la base de datos,
    # incluso si el contenedor es eliminado o actualizado.
    db-data:
